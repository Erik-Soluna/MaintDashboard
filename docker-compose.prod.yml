version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME:-maintenance_dashboard}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    networks:
      - maintenance_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    networks:
      - maintenance_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  web:
    build: .
    command: >
      sh -c "python manage.py init_database --admin-username ${ADMIN_USERNAME:-admin} --admin-email ${ADMIN_EMAIL:-admin@maintenance.local} --admin-password ${ADMIN_PASSWORD:-temppass123} &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 maintenance_dashboard.wsgi:application"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "${WEB_PORT:-4405}:8000"
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-me-in-production}
      - DB_NAME=${DB_NAME:-maintenance_dashboard}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,maintenance.errorlog.app}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - maintenance_network
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maintenance-web.rule=Host(`maintenance.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.maintenance-web.entrypoints=websecure"
      - "traefik.http.routers.maintenance-web.tls.certresolver=letsencrypt"
      - "traefik.http.services.maintenance-web.loadbalancer.server.port=8000"
      - "traefik.docker.network=proxy"
    restart: unless-stopped

  celery:
    build: .
    command: celery -A maintenance_dashboard worker --loglevel=info --concurrency=2
    volumes:
      - media_volume:/app/media
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-me-in-production}
      - DB_NAME=${DB_NAME:-maintenance_dashboard}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - maintenance_network
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A maintenance_dashboard beat --loglevel=info
    volumes:
      - media_volume:/app/media
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-change-me-in-production}
      - DB_NAME=${DB_NAME:-maintenance_dashboard}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - maintenance_network
    restart: unless-stopped

networks:
  maintenance_network:
    driver: bridge
  proxy:
    external: true

volumes:
  postgres_data:
  static_volume:
  media_volume:
# Generated by Django 4.2.7 on 2025-07-13 11:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0006_create_celery_beat_heartbeat'),
        ('equipment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityTypeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Category name (e.g., Preventive, Corrective, Inspection)', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of this activity category')),
                ('color', models.CharField(default='#007bff', help_text='Color for visual identification (hex code)', max_length=7)),
                ('icon', models.CharField(default='fas fa-wrench', help_text='FontAwesome icon class', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Order for display')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity Type Category',
                'verbose_name_plural': 'Activity Type Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityTypeTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Template name', max_length=100)),
                ('description', models.TextField(help_text='Template description')),
                ('estimated_duration_hours', models.PositiveIntegerField(default=1, help_text='Estimated duration in hours')),
                ('frequency_days', models.PositiveIntegerField(help_text='Frequency in days')),
                ('is_mandatory', models.BooleanField(default=True, help_text='Is this activity mandatory?')),
                ('default_tools_required', models.TextField(blank=True, help_text='Default tools required')),
                ('default_parts_required', models.TextField(blank=True, help_text='Default parts required')),
                ('default_safety_notes', models.TextField(blank=True, help_text='Default safety considerations')),
                ('checklist_template', models.TextField(blank=True, help_text='Default checklist items (one per line)')),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0, help_text='Order for display')),
                ('category', models.ForeignKey(help_text='Activity type category', on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='maintenance.activitytypecategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('equipment_category', models.ForeignKey(help_text='Equipment category this template applies to', on_delete=django.db.models.deletion.CASCADE, related_name='activity_templates', to='core.equipmentcategory')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity Type Template',
                'verbose_name_plural': 'Activity Type Templates',
                'ordering': ['equipment_category', 'sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='Maintenance activity title', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Detailed description')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('overdue', 'Overdue')], default='scheduled', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('scheduled_start', models.DateTimeField(help_text='Scheduled start date and time')),
                ('scheduled_end', models.DateTimeField(help_text='Scheduled end date and time')),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('required_status', models.CharField(blank=True, help_text='Required equipment status during maintenance', max_length=100)),
                ('tools_required', models.TextField(blank=True, help_text='Tools required for maintenance')),
                ('parts_required', models.TextField(blank=True, help_text='Parts required for maintenance')),
                ('safety_notes', models.TextField(blank=True, help_text='Safety considerations')),
                ('completion_notes', models.TextField(blank=True, help_text='Notes upon completion')),
                ('next_due_date', models.DateField(blank=True, help_text='When next maintenance of this type is due', null=True)),
            ],
            options={
                'verbose_name': 'Maintenance Activity',
                'verbose_name_plural': 'Maintenance Activities',
                'ordering': ['-scheduled_start'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceActivityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Activity type name (e.g., T-A-1, T-A-2)', max_length=100, unique=True)),
                ('description', models.TextField(help_text='Description of the maintenance activity')),
                ('estimated_duration_hours', models.PositiveIntegerField(default=1, help_text='Estimated duration in hours')),
                ('frequency_days', models.PositiveIntegerField(help_text='Frequency in days (e.g., 365 for annual)')),
                ('is_mandatory', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tools_required', models.TextField(blank=True, help_text='Tools required for this activity')),
                ('parts_required', models.TextField(blank=True, help_text='Parts required for this activity')),
                ('safety_notes', models.TextField(blank=True, help_text='Safety considerations')),
                ('applicable_equipment_categories', models.ManyToManyField(blank=True, help_text='Equipment categories this activity type applies to', related_name='applicable_activity_types', to='core.equipmentcategory')),
                ('category', models.ForeignKey(help_text='Activity type category', on_delete=django.db.models.deletion.CASCADE, related_name='activity_types', to='maintenance.activitytypecategory')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, help_text='Template used to create this activity type', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_activity_types', to='maintenance.activitytypetemplate')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Maintenance Activity Type',
                'verbose_name_plural': 'Maintenance Activity Types',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceTimelineEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entry_type', models.CharField(choices=[('created', 'Activity Created'), ('assigned', 'Activity Assigned'), ('started', 'Activity Started'), ('paused', 'Activity Paused'), ('resumed', 'Activity Resumed'), ('completed', 'Activity Completed'), ('cancelled', 'Activity Cancelled'), ('note', 'Note Added'), ('issue', 'Issue Reported'), ('resolution', 'Issue Resolved')], max_length=20)),
                ('title', models.CharField(help_text='Timeline entry title', max_length=200)),
                ('description', models.TextField(help_text='Detailed description of the timeline entry')),
                ('issue_severity', models.CharField(blank=True, choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], help_text='Severity level for issue entries', max_length=20)),
                ('resolution_time', models.DurationField(blank=True, help_text='Time taken to resolve issue', null=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline_entries', to='maintenance.maintenanceactivity')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_timeline_entries', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Maintenance Timeline Entry',
                'verbose_name_plural': 'Maintenance Timeline Entries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='maintenanceactivity',
            name='activity_type',
            field=models.ForeignKey(help_text='Type of maintenance activity', on_delete=django.db.models.deletion.PROTECT, related_name='activities', to='maintenance.maintenanceactivitytype'),
        ),
        migrations.AddField(
            model_name='maintenanceactivity',
            name='assigned_to',
            field=models.ForeignKey(blank=True, help_text='User assigned to perform this maintenance', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_maintenance', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='maintenanceactivity',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='maintenanceactivity',
            name='equipment',
            field=models.ForeignKey(help_text='Equipment this maintenance is for', on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_activities', to='equipment.equipment'),
        ),
        migrations.AddField(
            model_name='maintenanceactivity',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MaintenanceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semi_annual', 'Semi-Annual'), ('annual', 'Annual'), ('custom', 'Custom')], max_length=20)),
                ('frequency_days', models.PositiveIntegerField(blank=True, help_text='Custom frequency in days (for custom frequency type)', null=True)),
                ('start_date', models.DateField(help_text='When this schedule starts')),
                ('end_date', models.DateField(blank=True, help_text='When this schedule ends (optional)', null=True)),
                ('last_generated', models.DateField(blank=True, help_text='Last date activities were generated for this schedule', null=True)),
                ('auto_generate', models.BooleanField(default=True, help_text='Automatically generate maintenance activities')),
                ('advance_notice_days', models.PositiveIntegerField(default=7, help_text='Days in advance to generate activities')),
                ('is_active', models.BooleanField(default=True)),
                ('activity_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='maintenance.maintenanceactivitytype')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_schedules', to='equipment.equipment')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Maintenance Schedule',
                'verbose_name_plural': 'Maintenance Schedules',
                'ordering': ['equipment', 'activity_type'],
                'unique_together': {('equipment', 'activity_type')},
            },
        ),
        migrations.CreateModel(
            name='MaintenanceChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item_text', models.TextField(help_text='Checklist item description')),
                ('order', models.PositiveIntegerField(default=1, help_text='Order of this item in the checklist')),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Notes for this checklist item')),
                ('is_required', models.BooleanField(default=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_items', to='maintenance.maintenanceactivity')),
                ('activity_type', models.ForeignKey(help_text='Activity type this checklist item belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='checklist_templates', to='maintenance.maintenanceactivitytype')),
                ('completed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_checklist_items', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Maintenance Checklist Item',
                'verbose_name_plural': 'Maintenance Checklist Items',
                'ordering': ['activity', 'order'],
                'unique_together': {('activity', 'order')},
            },
        ),
        migrations.AddIndex(
            model_name='maintenanceactivity',
            index=models.Index(fields=['equipment', 'status'], name='maintenance_equipme_48eb3f_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceactivity',
            index=models.Index(fields=['scheduled_start'], name='maintenance_schedul_6b132b_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceactivity',
            index=models.Index(fields=['status', 'priority'], name='maintenance_status_40445a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='activitytypetemplate',
            unique_together={('equipment_category', 'name')},
        ),
    ]

version: '3.8'

services:
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: maintenance_dashboard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - maintenance_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - maintenance_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "chmod +x /app/ensure-database.sh &&
             /app/ensure-database.sh &&
             python manage.py init_database --admin-username admin --admin-email admin@maintenance.local --admin-password temppass123 &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 maintenance_dashboard.wsgi:application"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "4405:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-docker-development-key-change-in-production
      - DB_NAME=maintenance_dashboard
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,maintenance.errorlog.app,*
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - maintenance_network
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.maintenance-web.rule=Host(`maintenance.${DOMAIN:-localhost}`)"
      - "traefik.http.routers.maintenance-web.entrypoints=websecure"
      - "traefik.http.routers.maintenance-web.tls.certresolver=letsencrypt"
      - "traefik.http.services.maintenance-web.loadbalancer.server.port=8000"
      - "traefik.docker.network=proxy"
    restart: unless-stopped

  celery:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A maintenance_dashboard worker --loglevel=info
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-docker-development-key-change-in-production
      - DB_NAME=maintenance_dashboard
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - maintenance_network
    restart: unless-stopped

  celery-beat:
    build: 
      context: .
      dockerfile: Dockerfile
    command: celery -A maintenance_dashboard beat --loglevel=info
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-docker-development-key-change-in-production
      - DB_NAME=maintenance_dashboard
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - maintenance_network
    restart: unless-stopped

networks:
  maintenance_network:
    driver: bridge
  proxy:
    external: true

volumes:
  postgres_data:
  static_volume:
  media_volume: